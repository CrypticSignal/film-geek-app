{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport useColorScheme from \"react-native-web/dist/exports/useColorScheme\";\nimport { TextInput, Headline } from \"react-native-paper\";\nimport { Link } from '@react-navigation/native';\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\nimport { doc, setDoc, serverTimestamp } from \"firebase/firestore\";\nimport { db } from \"./../firebase/config\";\nimport OAuth from \"../components/Auth/OAuth\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function LoginPage() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var formData = {\n    email: email,\n    password: password\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    var auth, userCredential, user;\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            e.preventDefault();\n            console.log(formData);\n            _context.prev = 2;\n            auth = getAuth();\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(signInWithEmailAndPassword(auth, email, password));\n\n          case 6:\n            userCredential = _context.sent;\n            user = userCredential.user;\n\n            if (userCredential.user) {\n              console.log(\"logged in!\");\n            }\n\n            _context.next = 14;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](2);\n            console.log(_context.t0);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[2, 11]], Promise);\n  };\n\n  return _jsxs(_Fragment, {\n    children: [_jsxs(\"form\", {\n      style: {\n        padding: 20\n      },\n      children: [_jsx(Headline, {\n        style: {\n          color: \"#fff\"\n        },\n        children: \"Login\"\n      }), _jsxs(View, {\n        children: [_jsx(Text, {\n          style: styles.label,\n          children: \"Email\"\n        }), _jsx(TextInput, {\n          style: styles.input,\n          value: email,\n          onChangeText: function onChangeText(email) {\n            setEmail(email);\n          }\n        })]\n      }), _jsxs(View, {\n        children: [_jsx(Text, {\n          style: styles.label,\n          children: \"Password\"\n        }), _jsx(TextInput, {\n          style: styles.input,\n          value: password,\n          secureTextEntry: true,\n          right: _jsx(TextInput.Icon, {\n            name: \"eye\"\n          }),\n          onChangeText: function onChangeText(password) {\n            setPassword(password);\n          }\n        }), _jsx(\"br\", {}), _jsx(\"br\", {}), _jsx(Button, {\n          style: styles.button,\n          title: \"Log In\",\n          onPress: handleSubmit\n        }), _jsx(\"br\", {})]\n      }), _jsx(\"br\", {}), _jsx(Text, {\n        style: styles.label,\n        children: \"Sign Up?\"\n      })]\n    }), _jsx(OAuth, {})]\n  });\n}\nvar styles = StyleSheet.create({\n  title: {\n    fontSize: 20,\n    fontWeight: 500,\n    padding: Platform.OS === \"android\" ? 12 : 10,\n    paddingBottom: 40,\n    textAlign: \"center\",\n    color: \"#fff\"\n  },\n  label: {\n    height: 40,\n    width: \"40%\",\n    color: \"#fff\",\n    paddingTop: 15\n  },\n  input: {\n    width: \"100%\",\n    height: 40\n  },\n  password: {\n    width: \"100%\",\n    height: 40,\n    marginTop: 20\n  },\n  button: {\n    width: \"100%\",\n    height: 40\n  }\n});","map":{"version":3,"sources":["C:/Users/MKKIM/Desktop/film-geek-app/src/pages/LoginPage.jsx"],"names":["React","useState","TextInput","Headline","Link","getAuth","signInWithEmailAndPassword","doc","setDoc","serverTimestamp","db","OAuth","LoginPage","email","setEmail","password","setPassword","formData","handleSubmit","e","preventDefault","console","log","auth","userCredential","user","padding","color","styles","label","input","button","StyleSheet","create","title","fontSize","fontWeight","Platform","OS","paddingBottom","textAlign","height","width","paddingTop","marginTop"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Text, View, StyleSheet, Platform, Button, Alert, useColorScheme } from \"react-native\";\r\nimport { TextInput, Headline } from \"react-native-paper\";\r\nimport { Link } from '@react-navigation/native';\r\nimport {\r\n  getAuth,\r\n  signInWithEmailAndPassword\r\n} from \"firebase/auth\";\r\nimport { doc, setDoc, serverTimestamp } from \"firebase/firestore\";\r\nimport { db } from \"./../firebase/config\";\r\nimport OAuth from '../components/Auth/OAuth';\r\n\r\nexport default function LoginPage() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const formData = { email, password };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    console.log(formData);\r\n\r\n    try {\r\n      const auth = getAuth();\r\n\r\n      const userCredential = await signInWithEmailAndPassword(\r\n        auth,\r\n        email,\r\n        password\r\n      );\r\n\r\n      const user = userCredential.user;\r\n      if(userCredential.user){\r\n          console.log(\"logged in!\")\r\n          // navigate to Main Page\r\n      }\r\n\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <form style={{ padding: 20 }}>\r\n        <Headline style={{color:\"#fff\"}}>Login</Headline>\r\n        <View>\r\n          <Text style={styles.label}>Email</Text>\r\n          <TextInput\r\n            style={styles.input}\r\n            value={email}\r\n            onChangeText={(email) => {\r\n              setEmail(email);\r\n            }}\r\n          ></TextInput>\r\n        </View>\r\n\r\n        <View>\r\n          <Text style={styles.label}>Password</Text>\r\n          <TextInput\r\n            style={styles.input}\r\n            value={password}\r\n            secureTextEntry\r\n            right={<TextInput.Icon name=\"eye\" />}\r\n            onChangeText={(password) => {\r\n              setPassword(password);\r\n            }}\r\n          ></TextInput>\r\n                  <br />\r\n                  <br/>\r\n        <Button style={styles.button} title=\"Log In\" onPress={handleSubmit} />\r\n        <br/>\r\n        </View>\r\n        <br/>\r\n        <Text style={styles.label}>Sign Up?</Text>\r\n      </form>\r\n      <OAuth/>\r\n    </>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  title: {\r\n    fontSize: 20,\r\n    fontWeight: 500,\r\n    padding: Platform.OS === \"android\" ? 12 : 10,\r\n    paddingBottom: 40,\r\n    textAlign: \"center\",\r\n    color: \"#fff\",\r\n  },\r\n  label: {\r\n    height: 40,\r\n    width: \"40%\",\r\n    color: \"#fff\",\r\n    paddingTop: 15,\r\n  },\r\n  input: {\r\n    width: \"100%\",\r\n    height: 40,\r\n  },\r\n  password: {\r\n    width: \"100%\",\r\n    height: 40,\r\n    marginTop: 20,\r\n  },\r\n\r\n  button: {\r\n    width: \"100%\",\r\n    height: 40,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}