{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { TextInput, Headline } from \"react-native-paper\";\nimport { Link } from '@react-navigation/native';\nimport { getAuth, createUserWithEmailAndPassword, updateProfile } from \"firebase/auth\";\nimport { doc, setDoc, serverTimestamp } from \"firebase/firestore\";\nimport { db } from \"./../firebase/config\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function SignUpPage() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var formData = {\n    name: name,\n    email: email,\n    password: password\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    var auth, userCredential, user, formDataCopy;\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            e.preventDefault();\n            _context.prev = 1;\n            auth = getAuth();\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(createUserWithEmailAndPassword(auth, email, password));\n\n          case 5:\n            userCredential = _context.sent;\n            user = userCredential.user;\n            updateProfile(auth.currentUser, {\n              username: name\n            });\n            formDataCopy = _objectSpread({}, formData);\n            delete formDataCopy.password;\n            formDataCopy.timestamp = serverTimestamp();\n            console.log(formDataCopy);\n            _context.next = 14;\n            return _regeneratorRuntime.awrap(setDoc(doc(db, \"users\", user.uid), formDataCopy));\n\n          case 14:\n            console.log(\"user registered\");\n            _context.next = 20;\n            break;\n\n          case 17:\n            _context.prev = 17;\n            _context.t0 = _context[\"catch\"](1);\n            console.log(_context.t0);\n\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 17]], Promise);\n  };\n\n  return _jsx(_Fragment, {\n    children: _jsxs(\"form\", {\n      style: {\n        padding: 20\n      },\n      children: [_jsx(Headline, {\n        style: {\n          color: \"#fff\"\n        },\n        children: \"Sign Up\"\n      }), _jsxs(View, {\n        children: [_jsx(Text, {\n          style: styles.label,\n          children: \"Username\"\n        }), _jsx(TextInput, {\n          style: styles.input,\n          value: name,\n          onChangeText: function onChangeText(name) {\n            setName(name);\n          }\n        })]\n      }), _jsxs(View, {\n        children: [_jsx(Text, {\n          style: styles.label,\n          children: \"Email\"\n        }), _jsx(TextInput, {\n          style: styles.input,\n          value: email,\n          onChangeText: function onChangeText(email) {\n            setEmail(email);\n          }\n        })]\n      }), _jsxs(View, {\n        children: [_jsx(Text, {\n          style: styles.label,\n          children: \"Password\"\n        }), _jsx(TextInput, {\n          style: styles.input,\n          value: password,\n          onChangeText: function onChangeText(password) {\n            setPassword(password);\n          }\n        })]\n      }), _jsx(View, {\n        children: _jsx(TextInput, {\n          style: styles.password\n        })\n      }), _jsx(\"br\", {}), _jsx(Button, {\n        style: styles.button,\n        title: \"Register\",\n        onPress: handleSubmit\n      }), _jsx(\"br\", {}), _jsx(Text, {\n        style: styles.label,\n        children: \"Already Sign up?\"\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  title: {\n    fontSize: 20,\n    fontWeight: 500,\n    padding: Platform.OS === \"android\" ? 12 : 10,\n    paddingBottom: 40,\n    textAlign: \"center\",\n    color: \"#fff\"\n  },\n  label: {\n    height: 40,\n    width: \"40%\",\n    color: \"#fff\",\n    paddingTop: 15\n  },\n  input: {\n    width: \"100%\",\n    height: 40\n  },\n  password: {\n    width: \"100%\",\n    height: 40,\n    marginTop: 20\n  },\n  button: {\n    paddingTop: 20,\n    width: \"100%\",\n    height: 40\n  }\n});","map":{"version":3,"sources":["C:/Users/MKKIM/Desktop/film-geek-app/src/pages/SignUpPage.jsx"],"names":["React","useState","TextInput","Headline","Link","getAuth","createUserWithEmailAndPassword","updateProfile","doc","setDoc","serverTimestamp","db","SignUpPage","name","setName","email","setEmail","password","setPassword","formData","handleSubmit","e","preventDefault","auth","userCredential","user","currentUser","username","formDataCopy","timestamp","console","log","uid","padding","color","styles","label","input","button","StyleSheet","create","title","fontSize","fontWeight","Platform","OS","paddingBottom","textAlign","height","width","paddingTop","marginTop"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Text, View, StyleSheet, Platform, Button, Alert } from \"react-native\";\r\nimport { TextInput, Headline } from \"react-native-paper\";\r\nimport { Link } from '@react-navigation/native';\r\nimport {\r\n  getAuth,\r\n  createUserWithEmailAndPassword,\r\n  updateProfile,\r\n} from \"firebase/auth\";\r\nimport { doc, setDoc, serverTimestamp } from \"firebase/firestore\";\r\nimport { db } from \"./../firebase/config\";\r\n\r\nexport default function SignUpPage() {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const formData = { name, email, password };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const auth = getAuth();\r\n\r\n      const userCredential = await createUserWithEmailAndPassword(\r\n        auth,\r\n        email,\r\n        password\r\n      );\r\n\r\n      const user = userCredential.user;\r\n\r\n      updateProfile(auth.currentUser, {\r\n        username: name,\r\n      });\r\n\r\n      const formDataCopy = { ...formData };\r\n      delete formDataCopy.password;\r\n      formDataCopy.timestamp = serverTimestamp(); // timestamp\r\n\r\n      console.log(formDataCopy);\r\n\r\n      await setDoc(doc(db, \"users\", user.uid), formDataCopy);\r\n\r\n      console.log(\"user registered\");\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <form style={{ padding: 20 }}>\r\n        <Headline style={{color:\"#fff\"}}>Sign Up</Headline>\r\n        <View>\r\n          <Text style={styles.label}>Username</Text>\r\n          <TextInput\r\n            style={styles.input}\r\n            value={name}\r\n            onChangeText={(name) => {\r\n              setName(name);\r\n            }}\r\n          ></TextInput>\r\n        </View>\r\n        <View>\r\n          <Text style={styles.label}>Email</Text>\r\n          <TextInput\r\n            style={styles.input}\r\n            value={email}\r\n            onChangeText={(email) => {\r\n              setEmail(email);\r\n            }}\r\n          ></TextInput>\r\n        </View>\r\n\r\n        <View>\r\n          <Text style={styles.label}>Password</Text>\r\n          <TextInput\r\n            style={styles.input}\r\n            value={password}\r\n            onChangeText={(password) => {\r\n              setPassword(password);\r\n            }}\r\n          ></TextInput>\r\n        </View>\r\n        <View>\r\n          <TextInput style={styles.password}></TextInput>\r\n        </View>\r\n        <br />\r\n        <Button style={styles.button} title=\"Register\" onPress={handleSubmit} />\r\n        <br/>\r\n        <Text style={styles.label}>Already Sign up?</Text>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  title: {\r\n    fontSize: 20,\r\n    fontWeight: 500,\r\n    padding: Platform.OS === \"android\" ? 12 : 10,\r\n    paddingBottom: 40,\r\n    textAlign: \"center\",\r\n    color: \"#fff\",\r\n  },\r\n  label: {\r\n    height: 40,\r\n    width: \"40%\",\r\n    color: \"#fff\",\r\n    paddingTop: 15,\r\n  },\r\n  input: {\r\n    width: \"100%\",\r\n    height: 40,\r\n  },\r\n  password: {\r\n    width: \"100%\",\r\n    height: 40,\r\n    marginTop: 20,\r\n  },\r\n\r\n  button: {\r\n    paddingTop: 20,\r\n    width: \"100%\",\r\n    height: 40,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}